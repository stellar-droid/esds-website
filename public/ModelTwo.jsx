/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 LowServer.glb 
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import ImageMesh from '../src/component/WhyESDS/WhyImageMesh';;
// import ParticleSystem from '../src/component/Banner/ParticleSystem';
import gsap from 'gsap';
import { useThree } from '@react-three/fiber';
import { ScrollTrigger } from 'gsap/all';

export default function LowServer(props) {
  const { nodes, materials } = useGLTF('/LowServer.glb');
  // console.log("Hello")
  let mesh1 = useRef(null)
  let mesh2 = useRef(null)
  let mesh3 = useRef(null)
  let mesh4 = useRef(null)
  let mesh5 = useRef(null)
  let mesh6 = useRef(null)
  let img_mesh = useRef()


  
  let camera = useThree(state => state.camera)
  let scene = useThree(state => state.scene)
  // console.log(camera)
  gsap.registerPlugin(ScrollTrigger);

  useLayoutEffect(() => {

    const mm = gsap.matchMedia();

    mm.add("(min-width: 1199px)", () => {
      const m1_1 = mesh1.current
      const m2_1 = mesh2.current
      const m3_1 = mesh3.current
      const m4_1 = mesh4.current
      const m5_1 = mesh5.current
      const m6_1 = mesh6.current
    // console.log(camera)
    
      let t2 = gsap
      .timeline({
        scrollTrigger: {
          trigger: "#why-heading",
          start: "top top",
          endTrigger: "#innovation",
          end: () => innerHeight * 4,
          scrub: 1,
          // markers: true
        },
      })
      t2.to(scene.position, {y: 1.8})
      .to(scene.position, {y: 0})
      .to(camera.position, {x: -6.2, y: 0.59, z:0.8}, "key10")
      .to(camera.scale, {x: 1, y: 0.95, z:1}, "key10")
      .to(scene.position, {x: 0.2, y: 0, z:-2.8}, "key10")
      .to(scene.rotation, {x: 0.05, y: 7, z:-0.1}, "key10")
      .to(camera.position, {x: -8.2, y : 0.69, z: 1.8}, "key11")
      .to(camera.rotation, {x: -0.5, y : -1.4, z: -0.55}, "key11")
      .to(scene.rotation, {x: 0.03, y : -0.5, z: -0.05}, "key11")
      .to(scene.position, {x: 0, y : 0, z: 3.2}, "key11")
      .to(camera.position, {x: 1, y : 0, z: 0}, "key12")
        return () => { 
          if(t2) t2.kill();
        }
    })
    return () => {
      mm.revert();
    };
  })

  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.405, 0]} scale={1.28}>
        <mesh ref={mesh1} geometry={nodes.Cube.geometry} material={materials.Material} position={[0, 0.339, 0]} scale={[1, 0.261, 1]}>
          <mesh geometry={nodes.Sphere.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere001.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere002.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Torus.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
        </mesh>
        {/* <mesh geometry={nodes.ESDS_Text_Logo.geometry} material={materials['Material.004']} position={[0.008, 0.545, 0]} rotation={[0, -1.571, 0]} scale={[0.842, 0.058, 0.842]} /> */}
        <mesh  ref={mesh5} geometry={nodes.Display001.geometry} material={materials['Material.004']} position={[-0.901, 0.354, 0.433]} scale={[0.015, 0.115, 0.254]} />
        <ImageMesh img_mesh={img_mesh} />
        <mesh  ref={mesh6} geometry={nodes.Graphic_Element.geometry} material={materials['Display Elements_1@6x']} position={[-0.914, 0.354, 0.43]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={0.159} />
        <mesh ref={mesh2} geometry={nodes.Cube003.geometry} material={materials.Material} position={[0, -0.096, 0]} scale={[1, 0.261, 1]}>
          {/* <ParticleSystem /> */}
          <mesh geometry={nodes.Sphere004.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere005.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere006.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Torus001.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
        </mesh>
        <mesh ref={mesh3} geometry={nodes.Cube004.geometry} material={materials.Material} position={[0, -0.535, 0]} scale={[1, 0.261, 1]}>
        {/* <ParticleSystem /> */}
          <mesh geometry={nodes.Sphere007.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere008.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere009.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Torus002.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
        </mesh>
        <mesh ref={mesh4} geometry={nodes.Cube005.geometry} material={materials.Material} position={[0, -0.972, 0]} scale={[1, 0.261, 1]}>
        {/* <ParticleSystem /> */}
          <mesh geometry={nodes.Sphere010.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere011.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Sphere012.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
          <mesh geometry={nodes.Torus003.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/LowServer.glb')
