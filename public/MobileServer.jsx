/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 server.glb 
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import MobileImagemesh from '../src/component/Banner/MobileImagemesh';
import ParticleSystem from '../src/component/Banner/ParticleSystem';
import gsap from 'gsap';
import { useThree } from '@react-three/fiber';
import { ScrollTrigger } from 'gsap/all';
export default function MobileServer(props) {
  const { nodes, materials } = useGLTF('/LowServer.glb')

  let mesh1 = useRef(null)
  let mesh2 = useRef(null)
  let mesh3 = useRef(null)
  let mesh4 = useRef(null)
  let mesh5 = useRef(null)
  let mesh6 = useRef(null)
  let img_mesh = useRef()
  const { camera, scene } = useThree(state => ({
    camera: state.camera,
    scene: state.scene
  }));
  
  useLayoutEffect(() => {
    gsap.registerPlugin(ScrollTrigger);
    let t2 = gsap
    .timeline({
      scrollTrigger: {
        trigger: "#mobile-server-model",
        start: "top top",
        end: () => innerHeight * 5,
        scrub: 1,
         snap: "labels"
        // markers: true
      },
    })
    t2.to(scene.rotation, {x: 0, y: 6, z: 0}, "key")
    .to(scene.position, {x: 0.2, y: 12.5, z: -1}, "key")
    .to(camera.position, {x : -10.8, y: 9.5, z : 3.8}, "key")
    .to(scene.children[1], { intensity : 5,},"key")
    // .to(camera.rotation, {x : , y: , z : 0}, "key")
    .to(scene.rotation, {y: 7}," key1")
    .to(scene.rotation, {y: 8},"key2")
    .to(scene.rotation, {y: 9},"key3")
    
      return () => { 
        if(t2) t2.kill();
      }
    },[])

  return (
    <group {...props} dispose={null}>
    <group position={[0, 0.405, 0]} scale={1.28}>
      <mesh ref={mesh1} geometry={nodes.Cube.geometry} material={materials.Material} position={[0, 0.339, 0]} scale={[1, 0.261, 1]}>
        <mesh geometry={nodes.Sphere.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere001.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere002.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Torus.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
      </mesh>
      {/* <mesh geometry={nodes.ESDS_Text_Logo.geometry} material={materials['Material.004']} position={[0.008, 0.545, 0]} rotation={[0, -1.571, 0]} scale={[0.842, 0.058, 0.842]} /> */}
      <mesh  ref={mesh5} geometry={nodes.Display001.geometry} material={materials['Material.004']} position={[-0.901, 0.354, 0.433]} scale={[0.015, 0.115, 0.254]} />
      <MobileImagemesh img_mesh={img_mesh} />
      <mesh  ref={mesh6} geometry={nodes.Graphic_Element.geometry} material={materials['Display Elements_1@6x']} position={[-0.914, 0.354, 0.43]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={0.159} />
      <mesh ref={mesh2} geometry={nodes.Cube003.geometry} material={materials.Material} position={[0, -0.096, 0]} scale={[1, 0.261, 1]}>
        <mesh geometry={nodes.Sphere004.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere005.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere006.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Torus001.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
      </mesh>
      <mesh ref={mesh3} geometry={nodes.Cube004.geometry} material={materials.Material} position={[0, -0.535, 0]} scale={[1, 0.261, 1]}>
        <mesh geometry={nodes.Sphere007.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere008.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere009.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Torus002.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
      </mesh>
      <mesh ref={mesh4} geometry={nodes.Cube005.geometry} material={materials.Material} position={[0, -0.972, 0]} scale={[1, 0.261, 1]}>
        <mesh geometry={nodes.Sphere010.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.553]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere011.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.52]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Sphere012.geometry} material={materials['Material.002']} position={[-0.913, -0.304, -0.486]} rotation={[0, Math.PI / 2, 0]} scale={[0.011, 0.042, 0.011]} />
        <mesh geometry={nodes.Torus003.geometry} material={materials.Material} position={[0, -1.297, 0]} scale={[1, 3.825, 1]} />
      </mesh>
    </group>
  </group>
  )
}

useGLTF.preload('/LowServer.glb')
